{
  "info": {
    "name": "HubRecupera - 2FA + Password Reset",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Collection para testar primeiro acesso, reset de senha, login e 2FA."
  },
  "item": [
    {
      "name": "Password Reset - Generate",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/auth/password-reset/generate",
          "host": ["{{baseUrl}}"],
          "path": ["api","auth","password-reset","generate"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"login\": \"{{username}}\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const res = pm.response.json();",
              "pm.test('Generate reset link - 200', () => pm.response.code === 200);",
              "if (res && res.resetLink) {",
              "  try {",
              "    const url = new URL(res.resetLink);",
              "    const token = url.searchParams.get('token');",
              "    pm.environment.set('resetToken', token);",
              "  } catch(e) {}",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Password Reset - Validate Token",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/api/auth/password-reset/validate?token={{resetToken}}",
          "host": ["{{baseUrl}}"],
          "path": ["api","auth","password-reset","validate"],
          "query": [
            {"key": "token", "value": "{{resetToken}}"}
          ]
        }
      },
      "response": []
    },
    {
      "name": "Password Reset - Reset Password",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/auth/password-reset/reset",
          "host": ["{{baseUrl}}"],
          "path": ["api","auth","password-reset","reset"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"token\": \"{{resetToken}}\",\n  \"newPassword\": \"{{newPassword}}\",\n  \"confirmPassword\": \"{{newPassword}}\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const res = pm.response.json();",
              "pm.test('Reset password - 200', () => pm.response.code === 200);",
              "if (res && res.accessToken) pm.environment.set('accessToken', res.accessToken);",
              "if (res && res.refreshToken) pm.environment.set('refreshToken', res.refreshToken);",
              "if (res && res.userDetails && res.userDetails.user && res.userDetails.user.id) pm.environment.set('userId', res.userDetails.user.id);",
              "if (res && res.requiresToken) pm.environment.set('requiresTokenAfterReset', String(res.requiresToken));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Auth - Login",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/v1/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["api","v1","auth","login"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const res = pm.response.json();",
              "pm.test('Login - 200', () => pm.response.code === 200);",
              "if (res.requiresToken) {",
              "  pm.environment.set('requiresTokenOnLogin', 'true');",
              "  if (res.userDetails && res.userDetails.user && res.userDetails.user.id) pm.environment.set('userId', res.userDetails.user.id);",
              "} else {",
              "  if (res.accessToken) pm.environment.set('accessToken', res.accessToken);",
              "  if (res.token) pm.environment.set('refreshToken', res.token);",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "2FA - Generate Token (optional)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/v1/auth/generate-token",
          "host": ["{{baseUrl}}"],
          "path": ["api","v1","auth","generate-token"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userId\": {{userId}}\n}"
        }
      },
      "response": []
    },
    {
      "name": "2FA - Validate Token",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/v1/auth/validate-token",
          "host": ["{{baseUrl}}"],
          "path": ["api","v1","auth","validate-token"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userId\": {{userId}},\n  \"token\": \"{{twoFaToken}}\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const res = pm.response.json();",
              "pm.test('Validate 2FA - 200 or 401', () => [200,401].includes(pm.response.code));",
              "if (pm.response.code === 200) {",
              "  if (res.accessToken) pm.environment.set('accessToken', res.accessToken);",
              "  if (res.token) pm.environment.set('refreshToken', res.token);",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "User - Send Email Register (resend)",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/api/v1/auth/user/{{userId}}/send-email-register",
          "host": ["{{baseUrl}}"],
          "path": ["api","v1","auth","user","{{userId}}","send-email-register"]
        }
      },
      "response": []
    },
    {
      "name": "Password Reset - Cleanup (optional)",
      "request": {
        "method": "POST",
        "url": {
          "raw": "{{baseUrl}}/api/auth/password-reset/cleanup",
          "host": ["{{baseUrl}}"],
          "path": ["api","auth","password-reset","cleanup"]
        }
      },
      "response": []
    }
  ]
}

